<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on zhixuan's Blog</title><link>https://zhixuan666.github.io/tags/linux/</link><description>Recent content in linux on zhixuan's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 28 Nov 2020 18:20:08 +0000</lastBuildDate><atom:link href="https://zhixuan666.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Centos 安装 docker</title><link>https://zhixuan666.github.io/posts/4064fc4/</link><pubDate>Sat, 28 Nov 2020 18:20:08 +0000</pubDate><guid>https://zhixuan666.github.io/posts/4064fc4/</guid><description>安装说明 Docker CE 支持 64 位版本 CentOS 7，并且要求内核版本不低于 3.10
DOCKER官网
安装docker 删除旧版 docker $ sudo yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-engine 安装新版 docker $ sudo yum install -y yum-utils $ sudo yum-config-manager \ --add-repo \ https://download.docker.com/linux/centos/docker-ce.repo $ sudo yum install docker-ce docker-ce-cli containerd.io 防火墙 $ sudo firewall-cmd --permanent --zone=trusted --add-interface=docker0 $ sudo firewall-cmd --reload 开启docker $ sudo systemctl start docker 设置开机自启动 $ sudo systemctl enable docker 建立 docker 用户组 默认情况下，docker 命令会使用 Unix socket 与 Docker 引擎通讯。而只有 root 和 docker 组的用户才可以访问 Docker 引擎的 Unix socket。出于安全考虑，一般 Linux 系统上不会直接使用 root 用户。因此，更好地做法是将需要使用 docker 的用户加入 docker 用户组。</description></item><item><title>CentOS7 に Docker をインストールする方法</title><link>https://zhixuan666.github.io/ja/post/4064fc4/</link><pubDate>Sat, 28 Nov 2020 18:20:08 +0000</pubDate><guid>https://zhixuan666.github.io/ja/post/4064fc4/</guid><description>前提 DockerCE は CentOS7 の64ビットバージョンをサポートし、カーネルバージョンが3.10以上である必要があります
DOCKER公式サイト
インストール 古いバージョンの docker を削除します $ sudo yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-engine 新しいバージョンの docker をインストールします $ sudo yum install -y yum-utils $ sudo yum-config-manager \ --add-repo \ https://download.docker.com/linux/centos/docker-ce.repo $ sudo yum install docker-ce docker-ce-cli containerd.io ファイアウォールでのポート開放 $ sudo firewall-cmd --permanent --zone=trusted --add-interface=docker0 $ sudo firewall-cmd --reload docker サービスを起動する $ sudo systemctl start docker 自動起動を設定する $ sudo systemctl enable docker docker ユーザーグループを作成する セキュリティー面を考慮してやるかやらないかの方針決めが必要</description></item><item><title>WSL に SSH で接続する方法</title><link>https://zhixuan666.github.io/ja/post/e0320a75/</link><pubDate>Sun, 22 Nov 2020 16:41:05 +0000</pubDate><guid>https://zhixuan666.github.io/ja/post/e0320a75/</guid><description>はじめに WSL のターミナルは、コピー＆ペーストがし辛く、vscodeで操作できないものかと思い立った。
WSL (Windows Subsystem for Linux)
ssh のインストール $ sudo apt-get remove openssh-server $ sudo apt-get install openssh-server コンフィグ設定 $ sudo vi /etc/ssh/sshd_config コンフィグの内容を下記のように変える。
Port 22 # デフォルトは問題ありません。占有されているポートがある場合は、自分で変更できます PasswordAuthentication yes # ユーザー名とパスワードによるログインを許可する 補足 ssh サービスを起動する。 $ sudo service ssh restart ssh サービスを終止する。 これで、 ssh クライアントを使用して wsl に接続できます。
ENJOY WSL!</description></item><item><title>使用 ssh 工具连接到 wsl</title><link>https://zhixuan666.github.io/posts/e0320a75/</link><pubDate>Sun, 22 Nov 2020 16:41:05 +0000</pubDate><guid>https://zhixuan666.github.io/posts/e0320a75/</guid><description>前言 最近因为电脑性能不够，想在 wsl 上来搭建 code-server 结果无法启动 ssh 服务
安装 ssh $ sudo apt-get remove openssh-server $ sudo apt-get install openssh-server 编辑配置文件 $ sudo vi /etc/ssh/sshd_config Port 22 # 默认即可，如果有端口占用可以自己修改 PasswordAuthentication yes # 允许用户名密码方式登录
重启服务 $ sudo service ssh restart 现在可以使用客户端连接 wsl 了。</description></item><item><title>linux Minecraftサーバーを構築</title><link>https://zhixuan666.github.io/ja/post/2b678319/</link><pubDate>Mon, 21 Sep 2020 21:21:52 +0000</pubDate><guid>https://zhixuan666.github.io/ja/post/2b678319/</guid><description>初めに 使用なもの
Ubuntuおよびその他のDebian internet パブリックネットワークIP Minecraftサーバーを構築 Java と Screen インストール $ sudo apt-get update $ sudo apt-get install openjdk-8-jre screen サーバーにファイルを保存するためのディレクトリを作成します mkdir ~/mcserver cd /mcserver forge サーバーを構築するには、こちら
vanilla サーバーを構築する MCversions にアクセスし
必要なバージョンの Server jar を右クリックし、リンクをコピーして、ターミナルへ
$ wget コピーしたリンクを貼り付けます ダウンロード後、サーバーを起動します。
$ java -Xms512M -Xmx1024M -jar server.jar -nogui Xms512M: 最小メモリ Xmx1024M: 最大メモリ EULA $ vim eula.txt eula = false を eula = trueに変更し、コマンドを再入力します。</description></item><item><title>linux搭建Minecraft服务器</title><link>https://zhixuan666.github.io/posts/2b678319/</link><pubDate>Mon, 21 Sep 2020 21:21:52 +0000</pubDate><guid>https://zhixuan666.github.io/posts/2b678319/</guid><description>前言 Minecraft即我的世界，手头有闲置服务器的玩家算是有福了，可以自己搭建服务器，当然这片教程也适用于家庭，只不过需求可能有丶高。
本篇教程仅说明如何在Linux下搭建，全程使用root用户，使用的发行版是Debian9.5，同时适用于Ubuntu和其他的Debian系Linux使用，RHEL仅部分命令不同，其他也是相同的。
搭建Minecraft服务器 安装 Java 和 Screen Ubuntu和其他的Debian系Linux的命令
$ sudo apt-get update $ sudo apt-get install java screen -j RHEL的命令
$ sudo yum update $ sudo yum install java screen -y 创建一个目录存放服务端的文件 $ cd / #进入根目录 $ sudo mkdir mcserver #创建mcserver文件夹 $ cd /mcserver #进入mcserver文件夹 搭建 forge 服务器请到 搭建forge服务器
搭建非forge服务器 去 MCversions 下载
右键你想要的版本的 Server Jar ，复制链接，到终端。
wget 粘贴刚刚复制到链接 下载好了之后，启动服务器：
java -Xms512M -Xmx1024M -jar server.</description></item></channel></rss>